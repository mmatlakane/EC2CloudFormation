# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the "main" branch
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  tests:
    runs-on: ubuntu-latest
    steps:
      - name: Setup Cloud Formation Linter with Latest Version
        uses: scottbrenner/cfn-lint-action@v2
      - name: Print the Cloud Formation Linter Version & run Linter.
        run: |
         shopt -s globstar # enable globbing
         cfn-lint --version
         cfn-lint -t ./**/*.yaml
       
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it sasadsa
      - uses: actions/checkout@v3

      - name: Check PR title
        env:
          TITLE: ${{ github.event.pull_request.title }}
        run: |
          if [[ "$TITLE" =~ ^octocat ]]; then
          echo "PR title starts with 'octocat'"
          exit 0
          else
          echo "PR title did not start with 'octocat'"
          exit 1
          fi

      # Runs a single command using the runners shell
      - name: Run a one-line script
        run: echo Hello, world!

      # Runs a set of commands using the runners shell
      - name: Run a multi-line script
        run: |
          echo Add other actions to build,
          echo test, and deploy your project.

      #Deploy

      # - name: "Checkout"
      #   uses: actions/checkout@v2
      # - name: S3 Sync
      #   uses: jakejarvis/s3-sync-action@v0.5.1
      #   with:
      #     args: --acl bucket-owner-read --follow-symlinks
      #   env:
      #     AWS_ACCESS_KEY_ID: ${{secrets.AWS_ACCESS_KEY}}
      #     AWS_SECRET_ACCESS_KEY: ${{secrets.AWS_SECRET_KEY}}
      #     AWS_S3_BUCKET: ${{secrets.AWS_BUCKET}}
      #     SOURCE_DIR: './cloudformation'
